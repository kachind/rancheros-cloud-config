#cloud-config
rancher:
  state:
    fstype: auto
    formatzero: true
    autoformat:
    - /dev/sda
write_files:
  - path: /etc/rc.local
    permissions: "0755"
    owner: root
    content: |
      #!/bin/sh -e
      sudo /etc/install.sh &
      mkdir /dev/sr0
      DLIST="/var/lib/etcd /etc/kubernetes /etc/cni /opt/cni /var/lib/cni /var/run/calico /opt/rke"
        for dir in $DLIST; do
          echo "Removing $dir"
          rm -rf $dir
        done
      CLIST=$(docker ps -qa)
      if [ "x"$CLIST == "x" ]; then
        echo "No containers exist - skipping container cleanup"
        else
          docker rm -f $CLIST
      fi
      ILIST=$(docker images -a -q)
      if [ "x"$ILIST == "x" ]; then
        echo "No images exist - skipping image cleanup"
      else
       docker rmi $ILIST
      fi
      VLIST=$(docker volume ls -q)
      if [ "x"$VLIST == "x" ]; then
        echo "No volumes exist - skipping volume cleanup"
      else
        docker volume rm -f $VLIST
      fi
      echo "Cleanup complete."
      exit 0
  - path: /etc/install.sh
    permissions: "0755"
    owner: root
    content: |
      #!/bin/bash
      wget_output=1
      wait-for-docker
      while [ $wget_output -ne 0 ]
      do
        system-docker stop network
        sleep 10
        system-docker start network
        sleep 5
        sudo ros service enable kernel-extras
        sudo ros service up kernel-extras
        modprobe ipmi_devintf; modprobe ipmi_si
        new_hostname=$(sudo system-docker run --privileged -v /usr/src:/usr/src -v /lib/modules:/lib/modules kfox1111/ipmitool lan print 1 | grep "IP Address  " | sed 's/.* //' | sed 's/\./-/g')
        echo ${new_hostname}
        match="#cloud-config"
        script="hostname: "
        insert="$script$new_hostname"
        wget_output=`sudo wget -O /etc/cloud-config.yml https://raw.githubusercontent.com/kachind/rancheros-cloud-config/master/cloud-config.yml`
        wget_output=$?
        sleep 1
      done
      sudo sed -i "s/$match/$match\n$insert/" /etc/cloud-config.yml
      DRIVE=$(sudo fdisk -l | grep 'Disk /dev/' | cut -f 2 -d ' ')
      DRIVE=${DRIVE%?}
      echo Y | sudo ros install -f -c /etc/cloud-config.yml -d ${DRIVE}
